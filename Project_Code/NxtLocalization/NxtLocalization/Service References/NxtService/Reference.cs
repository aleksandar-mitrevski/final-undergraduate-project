//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace NxtLocalization.NxtService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NxtService.INxtService")]
    public interface INxtService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/ClassifierTrained", ReplyAction="http://tempuri.org/INxtService/ClassifierTrainedResponse")]
        System.IAsyncResult BeginClassifierTrained(System.AsyncCallback callback, object asyncState);
        
        bool EndClassifierTrained(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/TrainClassifier", ReplyAction="http://tempuri.org/INxtService/TrainClassifierResponse")]
        System.IAsyncResult BeginTrainClassifier(System.AsyncCallback callback, object asyncState);
        
        void EndTrainClassifier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/ClassifyCharacters", ReplyAction="http://tempuri.org/INxtService/ClassifyCharactersResponse")]
        System.IAsyncResult BeginClassifyCharacters(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndClassifyCharacters(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/SaveImage", ReplyAction="http://tempuri.org/INxtService/SaveImageResponse")]
        System.IAsyncResult BeginSaveImage(byte[] pictureData, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveImage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/ExtractCharacters", ReplyAction="http://tempuri.org/INxtService/ExtractCharactersResponse")]
        System.IAsyncResult BeginExtractCharacters(System.AsyncCallback callback, object asyncState);
        
        bool EndExtractCharacters(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/SaveLocalizationData", ReplyAction="http://tempuri.org/INxtService/SaveLocalizationDataResponse")]
        System.IAsyncResult BeginSaveLocalizationData(System.Collections.ObjectModel.ObservableCollection<double> xPositions, System.Collections.ObjectModel.ObservableCollection<double> yPositions, System.Collections.ObjectModel.ObservableCollection<double> weights, int counter, System.AsyncCallback callback, object asyncState);
        
        void EndSaveLocalizationData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/ConnectBrick", ReplyAction="http://tempuri.org/INxtService/ConnectBrickResponse")]
        System.IAsyncResult BeginConnectBrick(System.AsyncCallback callback, object asyncState);
        
        void EndConnectBrick(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/DisconnectBrick", ReplyAction="http://tempuri.org/INxtService/DisconnectBrickResponse")]
        System.IAsyncResult BeginDisconnectBrick(System.AsyncCallback callback, object asyncState);
        
        void EndDisconnectBrick(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/GetLeftMotorTachoCount", ReplyAction="http://tempuri.org/INxtService/GetLeftMotorTachoCountResponse")]
        System.IAsyncResult BeginGetLeftMotorTachoCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetLeftMotorTachoCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/GetRightMotorTachoCount", ReplyAction="http://tempuri.org/INxtService/GetRightMotorTachoCountResponse")]
        System.IAsyncResult BeginGetRightMotorTachoCount(System.AsyncCallback callback, object asyncState);
        
        int EndGetRightMotorTachoCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/ResetMotorTachometers", ReplyAction="http://tempuri.org/INxtService/ResetMotorTachometersResponse")]
        System.IAsyncResult BeginResetMotorTachometers(System.AsyncCallback callback, object asyncState);
        
        void EndResetMotorTachometers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/MoveMotors", ReplyAction="http://tempuri.org/INxtService/MoveMotorsResponse")]
        System.IAsyncResult BeginMoveMotors(sbyte leftMotorPower, sbyte rightMotorPower, System.AsyncCallback callback, object asyncState);
        
        void EndMoveMotors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/GoForward", ReplyAction="http://tempuri.org/INxtService/GoForwardResponse")]
        System.IAsyncResult BeginGoForward(System.AsyncCallback callback, object asyncState);
        
        void EndGoForward(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/GoBackward", ReplyAction="http://tempuri.org/INxtService/GoBackwardResponse")]
        System.IAsyncResult BeginGoBackward(System.AsyncCallback callback, object asyncState);
        
        void EndGoBackward(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/GoLeft", ReplyAction="http://tempuri.org/INxtService/GoLeftResponse")]
        System.IAsyncResult BeginGoLeft(System.AsyncCallback callback, object asyncState);
        
        void EndGoLeft(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/GoRight", ReplyAction="http://tempuri.org/INxtService/GoRightResponse")]
        System.IAsyncResult BeginGoRight(System.AsyncCallback callback, object asyncState);
        
        void EndGoRight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/GetDistanceToObstacle", ReplyAction="http://tempuri.org/INxtService/GetDistanceToObstacleResponse")]
        System.IAsyncResult BeginGetDistanceToObstacle(System.AsyncCallback callback, object asyncState);
        
        byte EndGetDistanceToObstacle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/GetColorIntensity", ReplyAction="http://tempuri.org/INxtService/GetColorIntensityResponse")]
        System.IAsyncResult BeginGetColorIntensity(System.AsyncCallback callback, object asyncState);
        
        byte EndGetColorIntensity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/StopMotors", ReplyAction="http://tempuri.org/INxtService/StopMotorsResponse")]
        System.IAsyncResult BeginStopMotors(System.AsyncCallback callback, object asyncState);
        
        void EndStopMotors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/INxtService/StopLight", ReplyAction="http://tempuri.org/INxtService/StopLightResponse")]
        System.IAsyncResult BeginStopLight(System.AsyncCallback callback, object asyncState);
        
        void EndStopLight(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INxtServiceChannel : NxtLocalization.NxtService.INxtService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClassifierTrainedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClassifierTrainedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClassifyCharactersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClassifyCharactersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExtractCharactersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExtractCharactersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLeftMotorTachoCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLeftMotorTachoCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRightMotorTachoCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRightMotorTachoCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDistanceToObstacleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDistanceToObstacleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetColorIntensityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetColorIntensityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NxtServiceClient : System.ServiceModel.ClientBase<NxtLocalization.NxtService.INxtService>, NxtLocalization.NxtService.INxtService {
        
        private BeginOperationDelegate onBeginClassifierTrainedDelegate;
        
        private EndOperationDelegate onEndClassifierTrainedDelegate;
        
        private System.Threading.SendOrPostCallback onClassifierTrainedCompletedDelegate;
        
        private BeginOperationDelegate onBeginTrainClassifierDelegate;
        
        private EndOperationDelegate onEndTrainClassifierDelegate;
        
        private System.Threading.SendOrPostCallback onTrainClassifierCompletedDelegate;
        
        private BeginOperationDelegate onBeginClassifyCharactersDelegate;
        
        private EndOperationDelegate onEndClassifyCharactersDelegate;
        
        private System.Threading.SendOrPostCallback onClassifyCharactersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveImageDelegate;
        
        private EndOperationDelegate onEndSaveImageDelegate;
        
        private System.Threading.SendOrPostCallback onSaveImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginExtractCharactersDelegate;
        
        private EndOperationDelegate onEndExtractCharactersDelegate;
        
        private System.Threading.SendOrPostCallback onExtractCharactersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveLocalizationDataDelegate;
        
        private EndOperationDelegate onEndSaveLocalizationDataDelegate;
        
        private System.Threading.SendOrPostCallback onSaveLocalizationDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectBrickDelegate;
        
        private EndOperationDelegate onEndConnectBrickDelegate;
        
        private System.Threading.SendOrPostCallback onConnectBrickCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectBrickDelegate;
        
        private EndOperationDelegate onEndDisconnectBrickDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectBrickCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLeftMotorTachoCountDelegate;
        
        private EndOperationDelegate onEndGetLeftMotorTachoCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetLeftMotorTachoCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRightMotorTachoCountDelegate;
        
        private EndOperationDelegate onEndGetRightMotorTachoCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetRightMotorTachoCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetMotorTachometersDelegate;
        
        private EndOperationDelegate onEndResetMotorTachometersDelegate;
        
        private System.Threading.SendOrPostCallback onResetMotorTachometersCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveMotorsDelegate;
        
        private EndOperationDelegate onEndMoveMotorsDelegate;
        
        private System.Threading.SendOrPostCallback onMoveMotorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGoForwardDelegate;
        
        private EndOperationDelegate onEndGoForwardDelegate;
        
        private System.Threading.SendOrPostCallback onGoForwardCompletedDelegate;
        
        private BeginOperationDelegate onBeginGoBackwardDelegate;
        
        private EndOperationDelegate onEndGoBackwardDelegate;
        
        private System.Threading.SendOrPostCallback onGoBackwardCompletedDelegate;
        
        private BeginOperationDelegate onBeginGoLeftDelegate;
        
        private EndOperationDelegate onEndGoLeftDelegate;
        
        private System.Threading.SendOrPostCallback onGoLeftCompletedDelegate;
        
        private BeginOperationDelegate onBeginGoRightDelegate;
        
        private EndOperationDelegate onEndGoRightDelegate;
        
        private System.Threading.SendOrPostCallback onGoRightCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDistanceToObstacleDelegate;
        
        private EndOperationDelegate onEndGetDistanceToObstacleDelegate;
        
        private System.Threading.SendOrPostCallback onGetDistanceToObstacleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetColorIntensityDelegate;
        
        private EndOperationDelegate onEndGetColorIntensityDelegate;
        
        private System.Threading.SendOrPostCallback onGetColorIntensityCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopMotorsDelegate;
        
        private EndOperationDelegate onEndStopMotorsDelegate;
        
        private System.Threading.SendOrPostCallback onStopMotorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopLightDelegate;
        
        private EndOperationDelegate onEndStopLightDelegate;
        
        private System.Threading.SendOrPostCallback onStopLightCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public NxtServiceClient() {
        }
        
        public NxtServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NxtServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NxtServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NxtServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ClassifierTrainedCompletedEventArgs> ClassifierTrainedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> TrainClassifierCompleted;
        
        public event System.EventHandler<ClassifyCharactersCompletedEventArgs> ClassifyCharactersCompleted;
        
        public event System.EventHandler<SaveImageCompletedEventArgs> SaveImageCompleted;
        
        public event System.EventHandler<ExtractCharactersCompletedEventArgs> ExtractCharactersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveLocalizationDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ConnectBrickCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DisconnectBrickCompleted;
        
        public event System.EventHandler<GetLeftMotorTachoCountCompletedEventArgs> GetLeftMotorTachoCountCompleted;
        
        public event System.EventHandler<GetRightMotorTachoCountCompletedEventArgs> GetRightMotorTachoCountCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ResetMotorTachometersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MoveMotorsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GoForwardCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GoBackwardCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GoLeftCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GoRightCompleted;
        
        public event System.EventHandler<GetDistanceToObstacleCompletedEventArgs> GetDistanceToObstacleCompleted;
        
        public event System.EventHandler<GetColorIntensityCompletedEventArgs> GetColorIntensityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopMotorsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopLightCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginClassifierTrained(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClassifierTrained(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NxtLocalization.NxtService.INxtService.EndClassifierTrained(System.IAsyncResult result) {
            return base.Channel.EndClassifierTrained(result);
        }
        
        private System.IAsyncResult OnBeginClassifierTrained(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginClassifierTrained(callback, asyncState);
        }
        
        private object[] OnEndClassifierTrained(System.IAsyncResult result) {
            bool retVal = ((NxtLocalization.NxtService.INxtService)(this)).EndClassifierTrained(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClassifierTrainedCompleted(object state) {
            if ((this.ClassifierTrainedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClassifierTrainedCompleted(this, new ClassifierTrainedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClassifierTrainedAsync() {
            this.ClassifierTrainedAsync(null);
        }
        
        public void ClassifierTrainedAsync(object userState) {
            if ((this.onBeginClassifierTrainedDelegate == null)) {
                this.onBeginClassifierTrainedDelegate = new BeginOperationDelegate(this.OnBeginClassifierTrained);
            }
            if ((this.onEndClassifierTrainedDelegate == null)) {
                this.onEndClassifierTrainedDelegate = new EndOperationDelegate(this.OnEndClassifierTrained);
            }
            if ((this.onClassifierTrainedCompletedDelegate == null)) {
                this.onClassifierTrainedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClassifierTrainedCompleted);
            }
            base.InvokeAsync(this.onBeginClassifierTrainedDelegate, null, this.onEndClassifierTrainedDelegate, this.onClassifierTrainedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginTrainClassifier(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTrainClassifier(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndTrainClassifier(System.IAsyncResult result) {
            base.Channel.EndTrainClassifier(result);
        }
        
        private System.IAsyncResult OnBeginTrainClassifier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginTrainClassifier(callback, asyncState);
        }
        
        private object[] OnEndTrainClassifier(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndTrainClassifier(result);
            return null;
        }
        
        private void OnTrainClassifierCompleted(object state) {
            if ((this.TrainClassifierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TrainClassifierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TrainClassifierAsync() {
            this.TrainClassifierAsync(null);
        }
        
        public void TrainClassifierAsync(object userState) {
            if ((this.onBeginTrainClassifierDelegate == null)) {
                this.onBeginTrainClassifierDelegate = new BeginOperationDelegate(this.OnBeginTrainClassifier);
            }
            if ((this.onEndTrainClassifierDelegate == null)) {
                this.onEndTrainClassifierDelegate = new EndOperationDelegate(this.OnEndTrainClassifier);
            }
            if ((this.onTrainClassifierCompletedDelegate == null)) {
                this.onTrainClassifierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTrainClassifierCompleted);
            }
            base.InvokeAsync(this.onBeginTrainClassifierDelegate, null, this.onEndTrainClassifierDelegate, this.onTrainClassifierCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginClassifyCharacters(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClassifyCharacters(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> NxtLocalization.NxtService.INxtService.EndClassifyCharacters(System.IAsyncResult result) {
            return base.Channel.EndClassifyCharacters(result);
        }
        
        private System.IAsyncResult OnBeginClassifyCharacters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginClassifyCharacters(callback, asyncState);
        }
        
        private object[] OnEndClassifyCharacters(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((NxtLocalization.NxtService.INxtService)(this)).EndClassifyCharacters(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClassifyCharactersCompleted(object state) {
            if ((this.ClassifyCharactersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClassifyCharactersCompleted(this, new ClassifyCharactersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClassifyCharactersAsync() {
            this.ClassifyCharactersAsync(null);
        }
        
        public void ClassifyCharactersAsync(object userState) {
            if ((this.onBeginClassifyCharactersDelegate == null)) {
                this.onBeginClassifyCharactersDelegate = new BeginOperationDelegate(this.OnBeginClassifyCharacters);
            }
            if ((this.onEndClassifyCharactersDelegate == null)) {
                this.onEndClassifyCharactersDelegate = new EndOperationDelegate(this.OnEndClassifyCharacters);
            }
            if ((this.onClassifyCharactersCompletedDelegate == null)) {
                this.onClassifyCharactersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClassifyCharactersCompleted);
            }
            base.InvokeAsync(this.onBeginClassifyCharactersDelegate, null, this.onEndClassifyCharactersDelegate, this.onClassifyCharactersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginSaveImage(byte[] pictureData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveImage(pictureData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NxtLocalization.NxtService.INxtService.EndSaveImage(System.IAsyncResult result) {
            return base.Channel.EndSaveImage(result);
        }
        
        private System.IAsyncResult OnBeginSaveImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] pictureData = ((byte[])(inValues[0]));
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginSaveImage(pictureData, callback, asyncState);
        }
        
        private object[] OnEndSaveImage(System.IAsyncResult result) {
            bool retVal = ((NxtLocalization.NxtService.INxtService)(this)).EndSaveImage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveImageCompleted(object state) {
            if ((this.SaveImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveImageCompleted(this, new SaveImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveImageAsync(byte[] pictureData) {
            this.SaveImageAsync(pictureData, null);
        }
        
        public void SaveImageAsync(byte[] pictureData, object userState) {
            if ((this.onBeginSaveImageDelegate == null)) {
                this.onBeginSaveImageDelegate = new BeginOperationDelegate(this.OnBeginSaveImage);
            }
            if ((this.onEndSaveImageDelegate == null)) {
                this.onEndSaveImageDelegate = new EndOperationDelegate(this.OnEndSaveImage);
            }
            if ((this.onSaveImageCompletedDelegate == null)) {
                this.onSaveImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveImageCompleted);
            }
            base.InvokeAsync(this.onBeginSaveImageDelegate, new object[] {
                        pictureData}, this.onEndSaveImageDelegate, this.onSaveImageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginExtractCharacters(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExtractCharacters(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool NxtLocalization.NxtService.INxtService.EndExtractCharacters(System.IAsyncResult result) {
            return base.Channel.EndExtractCharacters(result);
        }
        
        private System.IAsyncResult OnBeginExtractCharacters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginExtractCharacters(callback, asyncState);
        }
        
        private object[] OnEndExtractCharacters(System.IAsyncResult result) {
            bool retVal = ((NxtLocalization.NxtService.INxtService)(this)).EndExtractCharacters(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExtractCharactersCompleted(object state) {
            if ((this.ExtractCharactersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExtractCharactersCompleted(this, new ExtractCharactersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExtractCharactersAsync() {
            this.ExtractCharactersAsync(null);
        }
        
        public void ExtractCharactersAsync(object userState) {
            if ((this.onBeginExtractCharactersDelegate == null)) {
                this.onBeginExtractCharactersDelegate = new BeginOperationDelegate(this.OnBeginExtractCharacters);
            }
            if ((this.onEndExtractCharactersDelegate == null)) {
                this.onEndExtractCharactersDelegate = new EndOperationDelegate(this.OnEndExtractCharacters);
            }
            if ((this.onExtractCharactersCompletedDelegate == null)) {
                this.onExtractCharactersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExtractCharactersCompleted);
            }
            base.InvokeAsync(this.onBeginExtractCharactersDelegate, null, this.onEndExtractCharactersDelegate, this.onExtractCharactersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginSaveLocalizationData(System.Collections.ObjectModel.ObservableCollection<double> xPositions, System.Collections.ObjectModel.ObservableCollection<double> yPositions, System.Collections.ObjectModel.ObservableCollection<double> weights, int counter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveLocalizationData(xPositions, yPositions, weights, counter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndSaveLocalizationData(System.IAsyncResult result) {
            base.Channel.EndSaveLocalizationData(result);
        }
        
        private System.IAsyncResult OnBeginSaveLocalizationData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<double> xPositions = ((System.Collections.ObjectModel.ObservableCollection<double>)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<double> yPositions = ((System.Collections.ObjectModel.ObservableCollection<double>)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<double> weights = ((System.Collections.ObjectModel.ObservableCollection<double>)(inValues[2]));
            int counter = ((int)(inValues[3]));
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginSaveLocalizationData(xPositions, yPositions, weights, counter, callback, asyncState);
        }
        
        private object[] OnEndSaveLocalizationData(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndSaveLocalizationData(result);
            return null;
        }
        
        private void OnSaveLocalizationDataCompleted(object state) {
            if ((this.SaveLocalizationDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveLocalizationDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveLocalizationDataAsync(System.Collections.ObjectModel.ObservableCollection<double> xPositions, System.Collections.ObjectModel.ObservableCollection<double> yPositions, System.Collections.ObjectModel.ObservableCollection<double> weights, int counter) {
            this.SaveLocalizationDataAsync(xPositions, yPositions, weights, counter, null);
        }
        
        public void SaveLocalizationDataAsync(System.Collections.ObjectModel.ObservableCollection<double> xPositions, System.Collections.ObjectModel.ObservableCollection<double> yPositions, System.Collections.ObjectModel.ObservableCollection<double> weights, int counter, object userState) {
            if ((this.onBeginSaveLocalizationDataDelegate == null)) {
                this.onBeginSaveLocalizationDataDelegate = new BeginOperationDelegate(this.OnBeginSaveLocalizationData);
            }
            if ((this.onEndSaveLocalizationDataDelegate == null)) {
                this.onEndSaveLocalizationDataDelegate = new EndOperationDelegate(this.OnEndSaveLocalizationData);
            }
            if ((this.onSaveLocalizationDataCompletedDelegate == null)) {
                this.onSaveLocalizationDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveLocalizationDataCompleted);
            }
            base.InvokeAsync(this.onBeginSaveLocalizationDataDelegate, new object[] {
                        xPositions,
                        yPositions,
                        weights,
                        counter}, this.onEndSaveLocalizationDataDelegate, this.onSaveLocalizationDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginConnectBrick(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnectBrick(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndConnectBrick(System.IAsyncResult result) {
            base.Channel.EndConnectBrick(result);
        }
        
        private System.IAsyncResult OnBeginConnectBrick(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginConnectBrick(callback, asyncState);
        }
        
        private object[] OnEndConnectBrick(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndConnectBrick(result);
            return null;
        }
        
        private void OnConnectBrickCompleted(object state) {
            if ((this.ConnectBrickCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectBrickCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectBrickAsync() {
            this.ConnectBrickAsync(null);
        }
        
        public void ConnectBrickAsync(object userState) {
            if ((this.onBeginConnectBrickDelegate == null)) {
                this.onBeginConnectBrickDelegate = new BeginOperationDelegate(this.OnBeginConnectBrick);
            }
            if ((this.onEndConnectBrickDelegate == null)) {
                this.onEndConnectBrickDelegate = new EndOperationDelegate(this.OnEndConnectBrick);
            }
            if ((this.onConnectBrickCompletedDelegate == null)) {
                this.onConnectBrickCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectBrickCompleted);
            }
            base.InvokeAsync(this.onBeginConnectBrickDelegate, null, this.onEndConnectBrickDelegate, this.onConnectBrickCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginDisconnectBrick(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnectBrick(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndDisconnectBrick(System.IAsyncResult result) {
            base.Channel.EndDisconnectBrick(result);
        }
        
        private System.IAsyncResult OnBeginDisconnectBrick(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginDisconnectBrick(callback, asyncState);
        }
        
        private object[] OnEndDisconnectBrick(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndDisconnectBrick(result);
            return null;
        }
        
        private void OnDisconnectBrickCompleted(object state) {
            if ((this.DisconnectBrickCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectBrickCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectBrickAsync() {
            this.DisconnectBrickAsync(null);
        }
        
        public void DisconnectBrickAsync(object userState) {
            if ((this.onBeginDisconnectBrickDelegate == null)) {
                this.onBeginDisconnectBrickDelegate = new BeginOperationDelegate(this.OnBeginDisconnectBrick);
            }
            if ((this.onEndDisconnectBrickDelegate == null)) {
                this.onEndDisconnectBrickDelegate = new EndOperationDelegate(this.OnEndDisconnectBrick);
            }
            if ((this.onDisconnectBrickCompletedDelegate == null)) {
                this.onDisconnectBrickCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectBrickCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectBrickDelegate, null, this.onEndDisconnectBrickDelegate, this.onDisconnectBrickCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginGetLeftMotorTachoCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLeftMotorTachoCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NxtLocalization.NxtService.INxtService.EndGetLeftMotorTachoCount(System.IAsyncResult result) {
            return base.Channel.EndGetLeftMotorTachoCount(result);
        }
        
        private System.IAsyncResult OnBeginGetLeftMotorTachoCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginGetLeftMotorTachoCount(callback, asyncState);
        }
        
        private object[] OnEndGetLeftMotorTachoCount(System.IAsyncResult result) {
            int retVal = ((NxtLocalization.NxtService.INxtService)(this)).EndGetLeftMotorTachoCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLeftMotorTachoCountCompleted(object state) {
            if ((this.GetLeftMotorTachoCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLeftMotorTachoCountCompleted(this, new GetLeftMotorTachoCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLeftMotorTachoCountAsync() {
            this.GetLeftMotorTachoCountAsync(null);
        }
        
        public void GetLeftMotorTachoCountAsync(object userState) {
            if ((this.onBeginGetLeftMotorTachoCountDelegate == null)) {
                this.onBeginGetLeftMotorTachoCountDelegate = new BeginOperationDelegate(this.OnBeginGetLeftMotorTachoCount);
            }
            if ((this.onEndGetLeftMotorTachoCountDelegate == null)) {
                this.onEndGetLeftMotorTachoCountDelegate = new EndOperationDelegate(this.OnEndGetLeftMotorTachoCount);
            }
            if ((this.onGetLeftMotorTachoCountCompletedDelegate == null)) {
                this.onGetLeftMotorTachoCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLeftMotorTachoCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetLeftMotorTachoCountDelegate, null, this.onEndGetLeftMotorTachoCountDelegate, this.onGetLeftMotorTachoCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginGetRightMotorTachoCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRightMotorTachoCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int NxtLocalization.NxtService.INxtService.EndGetRightMotorTachoCount(System.IAsyncResult result) {
            return base.Channel.EndGetRightMotorTachoCount(result);
        }
        
        private System.IAsyncResult OnBeginGetRightMotorTachoCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginGetRightMotorTachoCount(callback, asyncState);
        }
        
        private object[] OnEndGetRightMotorTachoCount(System.IAsyncResult result) {
            int retVal = ((NxtLocalization.NxtService.INxtService)(this)).EndGetRightMotorTachoCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRightMotorTachoCountCompleted(object state) {
            if ((this.GetRightMotorTachoCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRightMotorTachoCountCompleted(this, new GetRightMotorTachoCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRightMotorTachoCountAsync() {
            this.GetRightMotorTachoCountAsync(null);
        }
        
        public void GetRightMotorTachoCountAsync(object userState) {
            if ((this.onBeginGetRightMotorTachoCountDelegate == null)) {
                this.onBeginGetRightMotorTachoCountDelegate = new BeginOperationDelegate(this.OnBeginGetRightMotorTachoCount);
            }
            if ((this.onEndGetRightMotorTachoCountDelegate == null)) {
                this.onEndGetRightMotorTachoCountDelegate = new EndOperationDelegate(this.OnEndGetRightMotorTachoCount);
            }
            if ((this.onGetRightMotorTachoCountCompletedDelegate == null)) {
                this.onGetRightMotorTachoCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRightMotorTachoCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetRightMotorTachoCountDelegate, null, this.onEndGetRightMotorTachoCountDelegate, this.onGetRightMotorTachoCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginResetMotorTachometers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetMotorTachometers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndResetMotorTachometers(System.IAsyncResult result) {
            base.Channel.EndResetMotorTachometers(result);
        }
        
        private System.IAsyncResult OnBeginResetMotorTachometers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginResetMotorTachometers(callback, asyncState);
        }
        
        private object[] OnEndResetMotorTachometers(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndResetMotorTachometers(result);
            return null;
        }
        
        private void OnResetMotorTachometersCompleted(object state) {
            if ((this.ResetMotorTachometersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetMotorTachometersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetMotorTachometersAsync() {
            this.ResetMotorTachometersAsync(null);
        }
        
        public void ResetMotorTachometersAsync(object userState) {
            if ((this.onBeginResetMotorTachometersDelegate == null)) {
                this.onBeginResetMotorTachometersDelegate = new BeginOperationDelegate(this.OnBeginResetMotorTachometers);
            }
            if ((this.onEndResetMotorTachometersDelegate == null)) {
                this.onEndResetMotorTachometersDelegate = new EndOperationDelegate(this.OnEndResetMotorTachometers);
            }
            if ((this.onResetMotorTachometersCompletedDelegate == null)) {
                this.onResetMotorTachometersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetMotorTachometersCompleted);
            }
            base.InvokeAsync(this.onBeginResetMotorTachometersDelegate, null, this.onEndResetMotorTachometersDelegate, this.onResetMotorTachometersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginMoveMotors(sbyte leftMotorPower, sbyte rightMotorPower, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveMotors(leftMotorPower, rightMotorPower, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndMoveMotors(System.IAsyncResult result) {
            base.Channel.EndMoveMotors(result);
        }
        
        private System.IAsyncResult OnBeginMoveMotors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            sbyte leftMotorPower = ((sbyte)(inValues[0]));
            sbyte rightMotorPower = ((sbyte)(inValues[1]));
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginMoveMotors(leftMotorPower, rightMotorPower, callback, asyncState);
        }
        
        private object[] OnEndMoveMotors(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndMoveMotors(result);
            return null;
        }
        
        private void OnMoveMotorsCompleted(object state) {
            if ((this.MoveMotorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveMotorsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveMotorsAsync(sbyte leftMotorPower, sbyte rightMotorPower) {
            this.MoveMotorsAsync(leftMotorPower, rightMotorPower, null);
        }
        
        public void MoveMotorsAsync(sbyte leftMotorPower, sbyte rightMotorPower, object userState) {
            if ((this.onBeginMoveMotorsDelegate == null)) {
                this.onBeginMoveMotorsDelegate = new BeginOperationDelegate(this.OnBeginMoveMotors);
            }
            if ((this.onEndMoveMotorsDelegate == null)) {
                this.onEndMoveMotorsDelegate = new EndOperationDelegate(this.OnEndMoveMotors);
            }
            if ((this.onMoveMotorsCompletedDelegate == null)) {
                this.onMoveMotorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveMotorsCompleted);
            }
            base.InvokeAsync(this.onBeginMoveMotorsDelegate, new object[] {
                        leftMotorPower,
                        rightMotorPower}, this.onEndMoveMotorsDelegate, this.onMoveMotorsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginGoForward(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGoForward(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndGoForward(System.IAsyncResult result) {
            base.Channel.EndGoForward(result);
        }
        
        private System.IAsyncResult OnBeginGoForward(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginGoForward(callback, asyncState);
        }
        
        private object[] OnEndGoForward(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndGoForward(result);
            return null;
        }
        
        private void OnGoForwardCompleted(object state) {
            if ((this.GoForwardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GoForwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GoForwardAsync() {
            this.GoForwardAsync(null);
        }
        
        public void GoForwardAsync(object userState) {
            if ((this.onBeginGoForwardDelegate == null)) {
                this.onBeginGoForwardDelegate = new BeginOperationDelegate(this.OnBeginGoForward);
            }
            if ((this.onEndGoForwardDelegate == null)) {
                this.onEndGoForwardDelegate = new EndOperationDelegate(this.OnEndGoForward);
            }
            if ((this.onGoForwardCompletedDelegate == null)) {
                this.onGoForwardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGoForwardCompleted);
            }
            base.InvokeAsync(this.onBeginGoForwardDelegate, null, this.onEndGoForwardDelegate, this.onGoForwardCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginGoBackward(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGoBackward(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndGoBackward(System.IAsyncResult result) {
            base.Channel.EndGoBackward(result);
        }
        
        private System.IAsyncResult OnBeginGoBackward(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginGoBackward(callback, asyncState);
        }
        
        private object[] OnEndGoBackward(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndGoBackward(result);
            return null;
        }
        
        private void OnGoBackwardCompleted(object state) {
            if ((this.GoBackwardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GoBackwardCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GoBackwardAsync() {
            this.GoBackwardAsync(null);
        }
        
        public void GoBackwardAsync(object userState) {
            if ((this.onBeginGoBackwardDelegate == null)) {
                this.onBeginGoBackwardDelegate = new BeginOperationDelegate(this.OnBeginGoBackward);
            }
            if ((this.onEndGoBackwardDelegate == null)) {
                this.onEndGoBackwardDelegate = new EndOperationDelegate(this.OnEndGoBackward);
            }
            if ((this.onGoBackwardCompletedDelegate == null)) {
                this.onGoBackwardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGoBackwardCompleted);
            }
            base.InvokeAsync(this.onBeginGoBackwardDelegate, null, this.onEndGoBackwardDelegate, this.onGoBackwardCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginGoLeft(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGoLeft(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndGoLeft(System.IAsyncResult result) {
            base.Channel.EndGoLeft(result);
        }
        
        private System.IAsyncResult OnBeginGoLeft(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginGoLeft(callback, asyncState);
        }
        
        private object[] OnEndGoLeft(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndGoLeft(result);
            return null;
        }
        
        private void OnGoLeftCompleted(object state) {
            if ((this.GoLeftCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GoLeftCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GoLeftAsync() {
            this.GoLeftAsync(null);
        }
        
        public void GoLeftAsync(object userState) {
            if ((this.onBeginGoLeftDelegate == null)) {
                this.onBeginGoLeftDelegate = new BeginOperationDelegate(this.OnBeginGoLeft);
            }
            if ((this.onEndGoLeftDelegate == null)) {
                this.onEndGoLeftDelegate = new EndOperationDelegate(this.OnEndGoLeft);
            }
            if ((this.onGoLeftCompletedDelegate == null)) {
                this.onGoLeftCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGoLeftCompleted);
            }
            base.InvokeAsync(this.onBeginGoLeftDelegate, null, this.onEndGoLeftDelegate, this.onGoLeftCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginGoRight(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGoRight(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndGoRight(System.IAsyncResult result) {
            base.Channel.EndGoRight(result);
        }
        
        private System.IAsyncResult OnBeginGoRight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginGoRight(callback, asyncState);
        }
        
        private object[] OnEndGoRight(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndGoRight(result);
            return null;
        }
        
        private void OnGoRightCompleted(object state) {
            if ((this.GoRightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GoRightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GoRightAsync() {
            this.GoRightAsync(null);
        }
        
        public void GoRightAsync(object userState) {
            if ((this.onBeginGoRightDelegate == null)) {
                this.onBeginGoRightDelegate = new BeginOperationDelegate(this.OnBeginGoRight);
            }
            if ((this.onEndGoRightDelegate == null)) {
                this.onEndGoRightDelegate = new EndOperationDelegate(this.OnEndGoRight);
            }
            if ((this.onGoRightCompletedDelegate == null)) {
                this.onGoRightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGoRightCompleted);
            }
            base.InvokeAsync(this.onBeginGoRightDelegate, null, this.onEndGoRightDelegate, this.onGoRightCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginGetDistanceToObstacle(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDistanceToObstacle(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte NxtLocalization.NxtService.INxtService.EndGetDistanceToObstacle(System.IAsyncResult result) {
            return base.Channel.EndGetDistanceToObstacle(result);
        }
        
        private System.IAsyncResult OnBeginGetDistanceToObstacle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginGetDistanceToObstacle(callback, asyncState);
        }
        
        private object[] OnEndGetDistanceToObstacle(System.IAsyncResult result) {
            byte retVal = ((NxtLocalization.NxtService.INxtService)(this)).EndGetDistanceToObstacle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDistanceToObstacleCompleted(object state) {
            if ((this.GetDistanceToObstacleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDistanceToObstacleCompleted(this, new GetDistanceToObstacleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDistanceToObstacleAsync() {
            this.GetDistanceToObstacleAsync(null);
        }
        
        public void GetDistanceToObstacleAsync(object userState) {
            if ((this.onBeginGetDistanceToObstacleDelegate == null)) {
                this.onBeginGetDistanceToObstacleDelegate = new BeginOperationDelegate(this.OnBeginGetDistanceToObstacle);
            }
            if ((this.onEndGetDistanceToObstacleDelegate == null)) {
                this.onEndGetDistanceToObstacleDelegate = new EndOperationDelegate(this.OnEndGetDistanceToObstacle);
            }
            if ((this.onGetDistanceToObstacleCompletedDelegate == null)) {
                this.onGetDistanceToObstacleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDistanceToObstacleCompleted);
            }
            base.InvokeAsync(this.onBeginGetDistanceToObstacleDelegate, null, this.onEndGetDistanceToObstacleDelegate, this.onGetDistanceToObstacleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginGetColorIntensity(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetColorIntensity(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte NxtLocalization.NxtService.INxtService.EndGetColorIntensity(System.IAsyncResult result) {
            return base.Channel.EndGetColorIntensity(result);
        }
        
        private System.IAsyncResult OnBeginGetColorIntensity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginGetColorIntensity(callback, asyncState);
        }
        
        private object[] OnEndGetColorIntensity(System.IAsyncResult result) {
            byte retVal = ((NxtLocalization.NxtService.INxtService)(this)).EndGetColorIntensity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetColorIntensityCompleted(object state) {
            if ((this.GetColorIntensityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetColorIntensityCompleted(this, new GetColorIntensityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetColorIntensityAsync() {
            this.GetColorIntensityAsync(null);
        }
        
        public void GetColorIntensityAsync(object userState) {
            if ((this.onBeginGetColorIntensityDelegate == null)) {
                this.onBeginGetColorIntensityDelegate = new BeginOperationDelegate(this.OnBeginGetColorIntensity);
            }
            if ((this.onEndGetColorIntensityDelegate == null)) {
                this.onEndGetColorIntensityDelegate = new EndOperationDelegate(this.OnEndGetColorIntensity);
            }
            if ((this.onGetColorIntensityCompletedDelegate == null)) {
                this.onGetColorIntensityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetColorIntensityCompleted);
            }
            base.InvokeAsync(this.onBeginGetColorIntensityDelegate, null, this.onEndGetColorIntensityDelegate, this.onGetColorIntensityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginStopMotors(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStopMotors(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndStopMotors(System.IAsyncResult result) {
            base.Channel.EndStopMotors(result);
        }
        
        private System.IAsyncResult OnBeginStopMotors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginStopMotors(callback, asyncState);
        }
        
        private object[] OnEndStopMotors(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndStopMotors(result);
            return null;
        }
        
        private void OnStopMotorsCompleted(object state) {
            if ((this.StopMotorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopMotorsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopMotorsAsync() {
            this.StopMotorsAsync(null);
        }
        
        public void StopMotorsAsync(object userState) {
            if ((this.onBeginStopMotorsDelegate == null)) {
                this.onBeginStopMotorsDelegate = new BeginOperationDelegate(this.OnBeginStopMotors);
            }
            if ((this.onEndStopMotorsDelegate == null)) {
                this.onEndStopMotorsDelegate = new EndOperationDelegate(this.OnEndStopMotors);
            }
            if ((this.onStopMotorsCompletedDelegate == null)) {
                this.onStopMotorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopMotorsCompleted);
            }
            base.InvokeAsync(this.onBeginStopMotorsDelegate, null, this.onEndStopMotorsDelegate, this.onStopMotorsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NxtLocalization.NxtService.INxtService.BeginStopLight(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStopLight(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void NxtLocalization.NxtService.INxtService.EndStopLight(System.IAsyncResult result) {
            base.Channel.EndStopLight(result);
        }
        
        private System.IAsyncResult OnBeginStopLight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((NxtLocalization.NxtService.INxtService)(this)).BeginStopLight(callback, asyncState);
        }
        
        private object[] OnEndStopLight(System.IAsyncResult result) {
            ((NxtLocalization.NxtService.INxtService)(this)).EndStopLight(result);
            return null;
        }
        
        private void OnStopLightCompleted(object state) {
            if ((this.StopLightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopLightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopLightAsync() {
            this.StopLightAsync(null);
        }
        
        public void StopLightAsync(object userState) {
            if ((this.onBeginStopLightDelegate == null)) {
                this.onBeginStopLightDelegate = new BeginOperationDelegate(this.OnBeginStopLight);
            }
            if ((this.onEndStopLightDelegate == null)) {
                this.onEndStopLightDelegate = new EndOperationDelegate(this.OnEndStopLight);
            }
            if ((this.onStopLightCompletedDelegate == null)) {
                this.onStopLightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopLightCompleted);
            }
            base.InvokeAsync(this.onBeginStopLightDelegate, null, this.onEndStopLightDelegate, this.onStopLightCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override NxtLocalization.NxtService.INxtService CreateChannel() {
            return new NxtServiceClientChannel(this);
        }
        
        private class NxtServiceClientChannel : ChannelBase<NxtLocalization.NxtService.INxtService>, NxtLocalization.NxtService.INxtService {
            
            public NxtServiceClientChannel(System.ServiceModel.ClientBase<NxtLocalization.NxtService.INxtService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginClassifierTrained(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ClassifierTrained", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndClassifierTrained(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ClassifierTrained", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTrainClassifier(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("TrainClassifier", _args, callback, asyncState);
                return _result;
            }
            
            public void EndTrainClassifier(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("TrainClassifier", _args, result);
            }
            
            public System.IAsyncResult BeginClassifyCharacters(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ClassifyCharacters", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndClassifyCharacters(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("ClassifyCharacters", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveImage(byte[] pictureData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pictureData;
                System.IAsyncResult _result = base.BeginInvoke("SaveImage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveImage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveImage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExtractCharacters(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ExtractCharacters", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndExtractCharacters(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ExtractCharacters", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveLocalizationData(System.Collections.ObjectModel.ObservableCollection<double> xPositions, System.Collections.ObjectModel.ObservableCollection<double> yPositions, System.Collections.ObjectModel.ObservableCollection<double> weights, int counter, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = xPositions;
                _args[1] = yPositions;
                _args[2] = weights;
                _args[3] = counter;
                System.IAsyncResult _result = base.BeginInvoke("SaveLocalizationData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveLocalizationData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveLocalizationData", _args, result);
            }
            
            public System.IAsyncResult BeginConnectBrick(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ConnectBrick", _args, callback, asyncState);
                return _result;
            }
            
            public void EndConnectBrick(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ConnectBrick", _args, result);
            }
            
            public System.IAsyncResult BeginDisconnectBrick(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DisconnectBrick", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDisconnectBrick(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DisconnectBrick", _args, result);
            }
            
            public System.IAsyncResult BeginGetLeftMotorTachoCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLeftMotorTachoCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetLeftMotorTachoCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetLeftMotorTachoCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRightMotorTachoCount(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRightMotorTachoCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetRightMotorTachoCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetRightMotorTachoCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginResetMotorTachometers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ResetMotorTachometers", _args, callback, asyncState);
                return _result;
            }
            
            public void EndResetMotorTachometers(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ResetMotorTachometers", _args, result);
            }
            
            public System.IAsyncResult BeginMoveMotors(sbyte leftMotorPower, sbyte rightMotorPower, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = leftMotorPower;
                _args[1] = rightMotorPower;
                System.IAsyncResult _result = base.BeginInvoke("MoveMotors", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMoveMotors(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MoveMotors", _args, result);
            }
            
            public System.IAsyncResult BeginGoForward(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GoForward", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGoForward(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GoForward", _args, result);
            }
            
            public System.IAsyncResult BeginGoBackward(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GoBackward", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGoBackward(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GoBackward", _args, result);
            }
            
            public System.IAsyncResult BeginGoLeft(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GoLeft", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGoLeft(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GoLeft", _args, result);
            }
            
            public System.IAsyncResult BeginGoRight(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GoRight", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGoRight(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GoRight", _args, result);
            }
            
            public System.IAsyncResult BeginGetDistanceToObstacle(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDistanceToObstacle", _args, callback, asyncState);
                return _result;
            }
            
            public byte EndGetDistanceToObstacle(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte _result = ((byte)(base.EndInvoke("GetDistanceToObstacle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetColorIntensity(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetColorIntensity", _args, callback, asyncState);
                return _result;
            }
            
            public byte EndGetColorIntensity(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte _result = ((byte)(base.EndInvoke("GetColorIntensity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStopMotors(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("StopMotors", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStopMotors(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StopMotors", _args, result);
            }
            
            public System.IAsyncResult BeginStopLight(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("StopLight", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStopLight(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StopLight", _args, result);
            }
        }
    }
}
